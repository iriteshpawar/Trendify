import uuid

from django.db import models


class BaseModel(models.Model):
    """
    A base model class that provides common fields for all models.

    Attributes:
    created_at (models.DateTimeField): The date and time when the record was created, automatically set when the object is saved for the first time.
    updated_at (models.DateTimeField): The date and time when the record was last updated, automatically set every time the object is saved.

    Methods:
    None
    """

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        abstract = True


class PublicId:
    """
    A utility class for generating unique public IDs using UUIDs.

    Attributes:
    None

    Methods:
    create_public_id: Generates a unique public ID using a UUID.
    """

    @staticmethod
    def create_public_id():
        """
        Generates a unique public ID using a UUID.

        The public ID is generated by converting a UUID to an integer,
        shifting the bits to the right by 75 positions, and then returning the result.

        Parameters:
        None

        Returns:
        int: A unique public ID.
        """
        public_id = uuid.uuid4().int >> 75
        return public_id


class UniqueIds(models.Model):
    """
    A model class that represents a unique identifier for each record.

    Attributes:
    id (models.BigAutoField): The primary key for the model, auto-generated and unique.
    public_id (models.BigIntegerField): A unique public ID for each record, generated using the PublicId utility class.

    Methods:
    None
    """

    class Meta:
        abstract = True

    id = models.BigAutoField(primary_key=True, unique=True)
    #  public id to share with the the in url,
    #  Used for REST routes and public displays
    public_id = models.BigIntegerField(editable=False, unique=True)
